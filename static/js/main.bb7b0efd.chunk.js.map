{"version":3,"sources":["index.js"],"names":["Logo","className","React","Component","Square","classNames","this","props","right","bottom","value","onClick","id","Game","i","squares","renderSquare","Hint","onHint","Pause","paused","Fragment","nbsp","Board","unpauseGame","pauseGame","Navigation","playerClass","playerPanel","historyClass","togglePanel","Player","editName","bind","middle","document","getElementById","number","addEventListener","ai","toggleLevel","editing_name","toggleEdit","third","toggleAI","saveName","e","target","str1","str2_ai","unbeatable","name","editing","type","spellCheck","onChange","icon_edit","nameTag","not_editing","str2_human","str2","save","str3","classWrapper","class2","History","size","history","length","moves","map","step","move","desc","key","jumpTo","Options","player1_ai","player1_unbeatable","player1_name","player1_editing","togglePlayer1AI","toggleLevelPlayer1","toggleEditPlayer1","handleNameChange1","savePlayer1Name","player2_ai","player2_unbeatable","player2_name","player2_editing","togglePlayer2AI","toggleLevelPlayer2","toggleEditPlayer2","handleNameChange2","savePlayer2Name","GamePanel","state","Array","fill","stepNumber","xIsNext","tempPaused","handleClick","setState","AIMove","setTimeout","bestMove","giveHint","slice","calculateWinner","calcFreeSquares","findBestMove","maxDepth","concat","autoMove","Page","lines","a","b","c","freeSquares","minimax","depth","score","winner","evaluate","best","Math","max","min","bestScore","val","ReactDOM","render"],"mappings":"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","file":"static/js/main.bb7b0efd.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nclass Logo extends React.Component {\r\n    render() {\r\n        const nbsp = '\\u00A0';\r\n        const pawClass = \"fas fa-paw pawClass\";\r\n        return (\r\n            <div className=\"logo-wrapper\">\r\n                <div className=\"logo\">\r\n                    <span className=\"hvr\">\r\n                        <i className={pawClass}></i>\r\n                        {nbsp} Shiba-Inu Tic-Tac-Toe\r\n                    </span>               \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n        let classNames = 'single-square' + (this.props.right ? ' right-border' : '') + \r\n                         (this.props.bottom ? ' bottom-border' : '');\r\n        if (this.props.value === 'hint_X' || this.props.value === 'hint_O') {\r\n            classNames = classNames + ' single-square-hint';\r\n        }\r\n        let value = this.props.value;\r\n        if (value === 'hint_X')\r\n            value = null;\r\n        else if (value === 'hint_O')\r\n            value = null;\r\n        return (\r\n            <button className={classNames} onClick={this.props.onClick} id={this.props.id}>\r\n                {value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    renderSquare(right, bottom, i) {\r\n        return (\r\n            <Square \r\n                right={right} \r\n                bottom={bottom} \r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n                id={i}\r\n            />\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='game'>\r\n                <div className='row'>\r\n                    {this.renderSquare(true, true, 0)}\r\n                    {this.renderSquare(true, true, 1)}\r\n                    {this.renderSquare(false, true, 2)}\r\n                </div>\r\n                <div className='row'>\r\n                    {this.renderSquare(true, true, 3)}\r\n                    {this.renderSquare(true, true, 4)}\r\n                    {this.renderSquare(false, true, 5)}\r\n                </div>\r\n                <div className='row'>\r\n                    {this.renderSquare(true, false, 6)}\r\n                    {this.renderSquare(true, false, 7)}\r\n                    {this.renderSquare(false, false, 8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Hint extends React.Component {\r\n    render() {\r\n        const nbsp = '\\u00A0';\r\n        const classStr = 'board-btn-container pd_top_twenty';\r\n        return (\r\n            <div className=\"hint\">\r\n                <div className={classStr}>\r\n                    <button className=\"board-btn\" onClick={this.props.onHint}>\r\n                        <i className=\"far fa-lightbulb\"></i>{nbsp} Show Hint\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Pause extends React.Component {\r\n    render() {\r\n        const nbsp = '\\u00A0';\r\n        return (\r\n            <div className=\"pause\">\r\n                <div className=\"board-btn-container\">\r\n                    <button className=\"board-btn\" onClick={this.props.onClick}>\r\n                        {!this.props.paused ?\r\n                            <React.Fragment>\r\n                                {<i className=\"fas fa-pause\"></i>}\r\n                                {nbsp + ' Pause'}\r\n                            </React.Fragment> :\r\n                            <React.Fragment>\r\n                                {<i className=\"fas fa-play\"></i>}\r\n                                {nbsp + ' Start'}\r\n                            </React.Fragment> \r\n                        }\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n    render() {\r\n        const classNames = 'board';\r\n        return (\r\n            <div className={classNames}>\r\n                <Logo/>\r\n                <Game\r\n                    squares={this.props.squares}\r\n                    onClick={this.props.onClick}    \r\n                />\r\n                <Hint onHint={this.props.onHint} />\r\n                <Pause paused={this.props.paused} onClick={this.props.paused ? this.props.unpauseGame : this.props.pauseGame}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        const playerClass = 'btn' + (this.props.playerPanel ? ' active' : '');\r\n        const historyClass = 'btn' + (this.props.playerPanel ? '' : ' active');\r\n        return (\r\n            <div className=\"menu-wrapper\">\r\n                <div className=\"menu\">\r\n                    <button className={playerClass} onClick={this.props.togglePanel}>Players</button><button className={historyClass} onClick={this.props.togglePanel}>History</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Player extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editName = this.editName.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const middle = document.getElementById('middle' + this.props.number);\r\n        if (middle) middle.addEventListener('click', () => {\r\n            if (this.props.ai) {\r\n                this.props.toggleLevel();\r\n            }\r\n            else {\r\n                if (!this.props.editing_name) {\r\n                    this.props.toggleEdit();\r\n                }\r\n            }\r\n        });\r\n\r\n        const third = document.getElementById('third' + this.props.number);\r\n        if (third) third.addEventListener('click', () => {\r\n            if (this.props.ai) {\r\n                this.props.toggleAI();\r\n            }\r\n            else {\r\n                if (this.props.editing_name) {\r\n                    this.props.saveName();\r\n                    this.props.toggleEdit();\r\n                }\r\n                else {\r\n                    this.props.toggleAI();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n    }\r\n\r\n    editName(e) {\r\n        this.props.editName(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const nbsp = '\\u00A0';\r\n        const str1 = ' Player ' + this.props.number + (this.props.ai ? ' (AI)' : ' (Human)') + ' :' + nbsp + (this.props.number === 1 ? 'X' : 'O');\r\n        let str2_ai =  'Unbeatable Mode ' + nbsp + nbsp;\r\n        str2_ai = <React.Fragment>\r\n            {str2_ai} \r\n            {this.props.unbeatable ? <i className=\"fas fa-check-circle\"></i> : <i className=\"far fa-circle\"></i>}\r\n        </React.Fragment>\r\n        const name = this.props.name;\r\n        const editing = <input type=\"text\" spellCheck=\"false\" value={name} onChange={this.editName}/>;\r\n        \r\n        const icon_edit = <i className=\"fas fa-user-edit\"></i>;\r\n        const nameTag = '' + name + nbsp + nbsp + nbsp;\r\n        const not_editing = <React.Fragment>{nameTag}{icon_edit}</React.Fragment>\r\n        \r\n        const str2_human = this.props.editing_name ? editing : not_editing;\r\n        const str2 = this.props.ai ? str2_ai : str2_human;\r\n        const save = <React.Fragment>{<i className=\"fas fa-check\"></i>} Save</React.Fragment>;\r\n        const str3 = this.props.ai ? ' Replace with Human ' : (this.props.editing_name ? save : ' Replace with AI ');\r\n\r\n        const classWrapper = this.props.number === 1 ? 'player-wrapper pd_top_forty' : 'player-wrapper';\r\n        const class1 = 'tab border-tab pd_bottom_two';\r\n        const class2 = this.props.editing_name ? 'tab border-tab pd_bottom_two' : 'tab border-tab hover pd_bottom_two';\r\n        const class3 = 'tab bottom-tab hover pd_bottom_two';\r\n\r\n        return (\r\n            <div className={classWrapper}>\r\n                <div className=\"player\">\r\n                    <div className={class1}>{str1}</div>\r\n                    <div className={class2} id={'middle'+this.props.number}>{str2}</div>\r\n                    <div className={class3} id={'third'+this.props.number}>{str3}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass History extends React.Component {\r\n    render() {\r\n        const size = this.props.history.length - 1;\r\n        const moves = this.props.history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            const classNames = 'tab hover pd_bottom_two ' + (move === size ? 'bottom-tab' : 'border-tab');\r\n            return (\r\n                <div key={move} className={classNames} onClick={() => this.props.jumpTo(move)}>{desc}</div>\r\n            );\r\n        });\r\n        return (\r\n            <div className={size <= 8 ? 'pd_top_twenty' : 'pd_top_ten'}>\r\n                <div className=\"history\">\r\n                    {moves}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Options extends React.Component {\r\n    // componentDidMount() {\r\n    //     console.log('Options');\r\n    //     console.log(this.props);\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className='options'>\r\n                <Navigation playerPanel={this.props.playerPanel} togglePanel={this.props.togglePanel} />\r\n                {this.props.playerPanel ? \r\n                    <React.Fragment>\r\n                        <Player\r\n                            number={1} \r\n                            ai={this.props.player1_ai} \r\n                            unbeatable={this.props.player1_unbeatable} \r\n                            name={this.props.player1_name}\r\n                            editing_name={this.props.player1_editing}    \r\n                            toggleAI={this.props.togglePlayer1AI}\r\n                            toggleLevel={this.props.toggleLevelPlayer1}\r\n                            toggleEdit={this.props.toggleEditPlayer1}\r\n                            editName={this.props.handleNameChange1}\r\n                            saveName={this.props.savePlayer1Name}\r\n                        />\r\n                        <Player\r\n                            number={2} \r\n                            ai={this.props.player2_ai} \r\n                            unbeatable={this.props.player2_unbeatable} \r\n                            name={this.props.player2_name}\r\n                            editing_name={this.props.player2_editing}\r\n                            toggleAI={this.props.togglePlayer2AI}\r\n                            toggleLevel={this.props.toggleLevelPlayer2}\r\n                            toggleEdit={this.props.toggleEditPlayer2}\r\n                            editName={this.props.handleNameChange2}\r\n                            saveName={this.props.savePlayer2Name}  \r\n                        />\r\n                    </React.Fragment>\r\n                    :\r\n                    <History\r\n                        history={this.props.history}\r\n                        jumpTo={this.props.jumpTo}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass GamePanel extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            paused: true,\r\n            player1_ai: false,\r\n            player1_unbeatable: true,\r\n            player1_name: 'Player One',\r\n            player1_editing: false,\r\n            player2_ai: false,\r\n            player2_unbeatable: true,\r\n            player2_name: 'Player Two',\r\n            player2_editing: false,\r\n            playerPanel: true,\r\n            xIsNext: true,\r\n            tempPaused: false,\r\n        };\r\n        this.togglePlayer1AI=this.togglePlayer1AI.bind(this);\r\n        this.toggleLevelPlayer1=this.toggleLevelPlayer1.bind(this);\r\n        this.toggleEditPlayer1=this.toggleEditPlayer1.bind(this);\r\n        this.handleNameChange1=this.handleNameChange1.bind(this);\r\n        this.savePlayer1Name=this.savePlayer1Name.bind(this);\r\n        this.togglePlayer2AI=this.togglePlayer2AI.bind(this);\r\n        this.toggleLevelPlayer2=this.toggleLevelPlayer2.bind(this);\r\n        this.toggleEditPlayer2=this.toggleEditPlayer2.bind(this);\r\n        this.handleNameChange2=this.handleNameChange2.bind(this);\r\n        this.savePlayer2Name=this.savePlayer2Name.bind(this);\r\n\r\n        this.handleClick=this.handleClick.bind(this);\r\n        this.pauseGame = this.pauseGame.bind(this);\r\n        this.unpauseGame = this.unpauseGame.bind(this);\r\n        this.onHint = this.onHint.bind(this);\r\n        this.togglePanel = this.togglePanel.bind(this);\r\n        this.jumpTo = this.jumpTo.bind(this);\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState ({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        }, () => {\r\n            this.pauseGame();\r\n        });\r\n    }\r\n\r\n    togglePanel() {\r\n        this.setState((state) => {\r\n            return {playerPanel: !state.playerPanel};\r\n        });\r\n    }\r\n\r\n    autoMove() {\r\n        if (this.state.xIsNext && this.state.player1_ai) {\r\n            this.AIMove();\r\n        }\r\n        else if (!this.state.xIsNext && this.state.player2_ai) {\r\n            this.AIMove();\r\n        }\r\n    }\r\n\r\n    AIMove() {\r\n        this.setState ({\r\n            tempPaused: true,\r\n        }, () => {\r\n            setTimeout(() => {\r\n                const bestMove = this.giveHint();\r\n                this.setState ({\r\n                    tempPaused: false,\r\n                }, () => {\r\n                    if (bestMove !== null) {\r\n                        this.handleClick(bestMove);\r\n                    }\r\n                });\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    onHint() {\r\n        if (!this.state.tempPaused) {\r\n            const current = this.state.history[this.state.stepNumber];\r\n            const squares = current.squares.slice();\r\n            if (calculateWinner(squares) || !calcFreeSquares(squares))\r\n                return;\r\n            this.setState ({\r\n                tempPaused: true,\r\n            }, () => {\r\n                const bestMove = findBestMove(squares, this.state.xIsNext, 100);\r\n                const delay = 250;\r\n                \r\n                this.setState ((state) => {\r\n                    state.history[state.stepNumber].squares[bestMove] = 'hint' + (this.state.xIsNext ? '_X' : '_O');\r\n                    return {history : state.history};\r\n                }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState ((state) => {\r\n                            state.history[state.stepNumber].squares[bestMove] = null;\r\n                            return {history : state.history};\r\n                        }, () => {\r\n                            setTimeout(() => {\r\n                                this.setState ((state) => {\r\n                                    state.history[state.stepNumber].squares[bestMove] = 'hint' + (this.state.xIsNext ? '_X' : '_O');\r\n                                    return {history : state.history};\r\n                                }, () => {\r\n                                    setTimeout(() => {\r\n                                        this.setState ((state) => {\r\n                                            state.history[state.stepNumber].squares[bestMove] = null;\r\n                                            return {history : state.history};\r\n                                        }, () => {\r\n                                            setTimeout(() => {\r\n                                                this.setState ((state) => {\r\n                                                    state.history[state.stepNumber].squares[bestMove] = 'hint' + (this.state.xIsNext ? '_X' : '_O');\r\n                                                    return {history : state.history};\r\n                                                }, () => {\r\n                                                    setTimeout(() => {\r\n                                                        this.setState ((state) => {\r\n                                                            state.history[state.stepNumber].squares[bestMove] = null;\r\n                                                            return {history : state.history};\r\n                                                        }, () => {\r\n                                                            setTimeout(() => {\r\n                                                                this.setState ({\r\n                                                                    tempPaused: false,\r\n                                                                });\r\n                                                            }, delay);\r\n                                                        });\r\n                                                    }, delay);\r\n                                                });\r\n                                            }, delay);\r\n                                        });\r\n                                    }, delay);\r\n                                });\r\n                            }, delay);\r\n                        });\r\n                    }, delay);\r\n                });\r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n    giveHint() {\r\n        const current = this.state.history[this.state.stepNumber];\r\n        const squares = current.squares.slice();\r\n        const maxDepth = this.state.xIsNext ? (this.state.player1_unbeatable ? 100 : 3) : (this.state.player2_unbeatable ? 100 : 5);\r\n        let bestMove = null;\r\n        if (this.state.xIsNext && !this.state.stepNumber && !this.state.player1_unbeatable)\r\n            bestMove = 7;\r\n        else\r\n            bestMove = findBestMove(squares, this.state.xIsNext, maxDepth);\r\n        // console.log('Best Move: ', bestMove, maxDepth);\r\n        return bestMove;\r\n    }\r\n\r\n    handleClick(i) {\r\n        if (!this.state.paused && !this.state.tempPaused) {\r\n            const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n            const current = history[history.length - 1];\r\n            const squares = current.squares.slice();\r\n            if (calculateWinner(squares) || squares[i]) {\r\n                return;\r\n            }\r\n            squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n            this.setState({\r\n                history: history.concat([{\r\n                    squares: squares,\r\n                }]),\r\n                stepNumber: history.length,\r\n                xIsNext: !this.state.xIsNext,\r\n            }, () => {\r\n                if (calculateWinner(squares) || !calcFreeSquares(squares)) {\r\n                    this.pauseGame();\r\n                } else {\r\n                    this.autoMove();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    pauseGame() {\r\n        this.setState({\r\n            paused: true,\r\n        })\r\n    }\r\n\r\n    unpauseGame() {\r\n        if (!this.state.tempPaused) {\r\n            const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n            const current = history[history.length - 1];\r\n            const squares = current.squares.slice();\r\n            if (calculateWinner(squares) || !calcFreeSquares(squares)) {\r\n                this.setState({\r\n                    paused: false,\r\n                    xIsNext: true,\r\n                    stepNumber: 0,\r\n                    history: [{\r\n                        squares: Array(9).fill(null),\r\n                    }], \r\n                }, () => {\r\n                    this.autoMove();\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    paused: false,\r\n                }, () => {\r\n                    this.autoMove();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    togglePlayer1AI() {\r\n        this.pauseGame();\r\n        this.setState((state) => {\r\n            return {player1_ai: !state.player1_ai,};\r\n        });\r\n    }\r\n\r\n    toggleLevelPlayer1() {\r\n        this.pauseGame();\r\n        this.setState((state) => {\r\n            return {player1_unbeatable: !state.player1_unbeatable,};\r\n        });\r\n    }\r\n\r\n    toggleEditPlayer1() {\r\n        this.setState((state) => {\r\n            return {player1_editing: !state.player1_editing,};\r\n        });\r\n    }\r\n\r\n    togglePlayer2AI() {\r\n        this.pauseGame();\r\n        this.setState((state) => {\r\n            return {player2_ai: !state.player2_ai,};\r\n        });\r\n    }\r\n\r\n    toggleLevelPlayer2() {\r\n        this.pauseGame();\r\n        this.setState((state) => {\r\n            return {player2_unbeatable: !state.player2_unbeatable,};\r\n        });\r\n    }\r\n\r\n    toggleEditPlayer2() {\r\n        this.setState((state) => {\r\n            return {player2_editing: !state.player2_editing,};\r\n        });\r\n    }\r\n\r\n    savePlayer1Name() {\r\n        this.setState((state) => {\r\n            return {player1_name: state.player1_name === '' ? 'Player One' : state.player1_name};\r\n        });\r\n    }\r\n\r\n    savePlayer2Name() {\r\n        this.setState((state) => {\r\n            return {player2_name: state.player2_name === '' ? 'Player Two' : state.player2_name};\r\n        });\r\n    }\r\n\r\n    handleNameChange1(name) {\r\n        this.setState({\r\n            player1_name : name,\r\n        });\r\n    }\r\n\r\n    handleNameChange2(name) {\r\n        this.setState({\r\n            player2_name : name,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classNames = 'game-panel';\r\n        const current = this.state.history[this.state.stepNumber];\r\n        const squares = current.squares.slice();\r\n        return (\r\n            <div className={classNames}>\r\n                <Board\r\n                    squares={squares}\r\n                    onClick={this.handleClick}\r\n                    paused={this.state.paused}\r\n                    pauseGame={this.pauseGame}\r\n                    unpauseGame={this.unpauseGame}\r\n                    onHint={this.onHint}\r\n                />\r\n                <Options\r\n                    playerPanel={this.state.playerPanel}\r\n                    togglePanel={this.togglePanel}\r\n                    history={this.state.history}\r\n                    jumpTo={this.jumpTo}\r\n                    \r\n                    player1_ai={this.state.player1_ai}\r\n                    player1_unbeatable={this.state.player1_unbeatable}\r\n                    player1_name={this.state.player1_name}\r\n                    player1_editing={this.state.player1_editing}\r\n                    player2_ai={this.state.player2_ai}\r\n                    player2_unbeatable={this.state.player2_unbeatable}\r\n                    player2_name={this.state.player2_name}\r\n                    player2_editing={this.state.player2_editing}\r\n                    \r\n                    togglePlayer1AI={this.togglePlayer1AI}\r\n                    toggleLevelPlayer1={this.toggleLevelPlayer1}\r\n                    toggleEditPlayer1={this.toggleEditPlayer1}\r\n                    handleNameChange1={this.handleNameChange1}\r\n                    savePlayer1Name={this.savePlayer1Name}\r\n                    togglePlayer2AI={this.togglePlayer2AI}\r\n                    toggleLevelPlayer2={this.toggleLevelPlayer2}\r\n                    toggleEditPlayer2={this.toggleEditPlayer2}\r\n                    handleNameChange2={this.handleNameChange2}\r\n                    savePlayer2Name={this.savePlayer2Name}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Page extends React.Component {\r\n    render() {\r\n        const classNames = 'background-checkers square';\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classNames}>\r\n                    <div className=\"row\">\r\n                        <div className=\"tile-black\"></div>\r\n                        <div className=\"tile-white\"></div>\r\n                    </div>\r\n                    <div className=\"row\">    \r\n                        <div className=\"tile-white\"></div>\r\n                        <div className=\"tile-black\"></div>\r\n                    </div>\r\n                </div>\r\n                <GamePanel/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Page/>,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction calcFreeSquares(squares) {\r\n    let freeSquares = 0;\r\n    for (let i = 0; i < 9; i++) {\r\n        if (squares[i] === null)\r\n            freeSquares++;\r\n    }\r\n    return freeSquares;\r\n}\r\n\r\nfunction evaluate(squares, depth) {\r\n    const winner = calculateWinner(squares);\r\n    if (winner) {\r\n        if (winner === 'X') return 10 - depth;\r\n        else return -10 + depth;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction minimax(squares, depth, xIsNext, maxDepth) {\r\n    const score = evaluate(squares, depth);\r\n    if (score !== 0) return score;\r\n    let best = xIsNext ? -1000 : 1000;\r\n    let freeSquares = calcFreeSquares(squares);\r\n    if (freeSquares === 0)\r\n        return 0;\r\n    if (xIsNext) {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (squares[i] === null) {\r\n                if (depth < maxDepth) {\r\n                    squares[i] = 'X';\r\n                    best = Math.max(best, minimax(squares, depth + 1, !xIsNext, maxDepth));\r\n                    squares[i] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (squares[i] === null) {\r\n                if (depth < maxDepth) {\r\n                    squares[i] = 'O';\r\n                    best = Math.min(best, minimax(squares, depth + 1, !xIsNext, maxDepth));\r\n                    squares[i] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // console.log(squares, best, xIsNext);\r\n    return best;\r\n}\r\n\r\nfunction findBestMove(squares, xIsNext, maxDepth) {\r\n    // console.log('Called');\r\n    let bestScore = xIsNext ? -1000 : 1000;\r\n    let bestMove = null;\r\n    if (xIsNext) {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (squares[i] === null) {\r\n                squares[i] = 'X';\r\n                const val = minimax(squares, 0, !xIsNext, maxDepth);\r\n                squares[i] = null;\r\n                // console.log(val, i);\r\n                if (val >= bestScore) {\r\n                    bestScore = val;\r\n                    bestMove = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (squares[i] === null) {\r\n                squares[i] = 'O';\r\n                const val = minimax(squares, 0, !xIsNext, maxDepth);\r\n                // console.log(val, i);\r\n                squares[i] = null;\r\n                if (val <= bestScore) {\r\n                    bestScore = val;\r\n                    bestMove = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const val = minimax(squares, 0, !xIsNext, 100);\r\n    if (val === 9 && !xIsNext && maxDepth !== 100) {\r\n        bestMove = findBestMove(squares, !xIsNext, 100);\r\n        // console.log('Fix :', bestMove);\r\n    }\r\n    if (val === -9 && xIsNext && maxDepth !== 100) {\r\n        bestMove = findBestMove(squares, !xIsNext, 100);\r\n        // console.log('Fix :', bestMove);\r\n    }\r\n\r\n    return bestMove;\r\n}\r\n"],"sourceRoot":""}